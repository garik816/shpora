#define F_CPU 1000000UL // указываем частоту в герцах
#include <avr/io.h>
#include <util/delay.h>

int main(void) {	// начало основной программы
DDRD = 0xff;	 // все выводы порта D сконфигурировать как выходы
PORTD |= _BV(PD1);	// установить "1" (высокий уровень) на выводе PD1, 
//зажечь светодиод
_delay_ms(500);	// ждем 0.5 сек.
PORTD &= ~_BV(PD1);	// установить "0" (низкий уровень) на выводе PD1,
//погасить светодиод
_delay_ms(500);	// ждем 0.5 сек.
PORTD |= _BV(PD1);	// установить "1" (высокий уровень) на выводе PD1,
//зажечь светодиод
_delay_ms(500);	// ждем 0.5 сек.
PORTD &= ~_BV(PD1);	// установить "0" (низкий уровень) на выводе PD1,
//погасить светодиод
}	 // закрывающая скобка основной программы

============================================================

#include <delay.h>
#define _delay_ms(x) delay_ms(x) 
#define BITSET(var,bitno) ((var) |= 1 << (bitno)) 
#define BITCLR(var,bitno) ((var) &= ~(1 << (bitno)))
#define BITTST1(var,bitno) ((var) & (1 << (bitno))) 

#define PD1_hi() {BITSET(PORTD,1);}
#define PD1_lo() {BITCLR(PORTD,1);} 


============================================================


tmp = tmp | (1<<7)|(1<<5)|(1<<0);   //устанавливаем в единицу седьмой, пятый и нулевой биты переменной tmp
tmp |= (1<<7)|(1<<5)|(1<<0);        //сокращенный вариант

tmp = tmp & (~((1<<3)|(1<<5)|(1<<6))); //обнуляем третий, пятый и шестой биты 
tmp &= (~((1<<3)|(1<<5)|(1<<6)));      //сокращенный вариант

tmp ^= ((1<<4)|(1<<2)|(1<<1)); //инвертируем 4,2 и 1 биты   

============================================================

#define   SetBit(reg, bit)          reg |= (1<<bit)            
#define   ClearBit(reg, bit)       reg &= (~(1<<bit))
#define   InvBit(reg, bit)          reg ^= (1<<bit)
#define   BitIsSet(reg, bit)       ((reg & (1<<bit)) != 0)
#define   BitIsClear(reg, bit)    ((reg & (1<<bit)) == 0)

============================================================

Можно использовать многострочные определения, используя в конце каждой строки символ \ 

#define INIT_Timer()        TIMSK = (1<<OCIE0);\
                            TCCR0 = (1<<WGM01)|(0<<WGM00)|(1<<CS02);\
                            TCNT0 = 0;\
                            OCR0 = 0x7d

пример использования:
INIT_Timer();

============================================================



DDRD  = 0xFF;   //настройка всех выводов порта D как выходов
PORTD = 0x0F;   //вывод в разряды порта D значений 00001111
